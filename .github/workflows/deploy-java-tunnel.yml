name: Deploy Java Tunnel Service

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-java-tunnel:
    runs-on: ubuntu-latest
    
    steps:
      - name: Ê£ÄÂá∫‰ª£Á†Å
        uses: actions/checkout@v4

      - name: ËÆæÁΩÆJava 11ÁéØÂ¢É
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: MavenÊûÑÂª∫
        run: |
          cd server-java
          mvn clean package -DskipTests
          ls -lh target/

      - name: ÂáÜÂ§áÈÉ®ÁΩ≤Êñá‰ª∂
        run: |
          mkdir -p deploy
          cp server-java/target/tunnel-service.jar deploy/
          cp server-java/*.sh deploy/
          chmod +x deploy/*.sh
          ls -lh deploy/

      - name: ÈÉ®ÁΩ≤Âà∞ECS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.ECS_HOST }}
          username: ${{ secrets.ECS_USERNAME }}
          key: ${{ secrets.ECS_SSH_KEY }}
          source: "deploy/*"
          target: "/opt/basketball-tunnel/"
          strip_components: 1

      - name: ÈÖçÁΩÆÂπ∂ÂêØÂä®ÊúçÂä°
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ECS_HOST }}
          username: ${{ secrets.ECS_USERNAME }}
          key: ${{ secrets.ECS_SSH_KEY }}
          script: |
            cd /opt/basketball-tunnel
            
            # ÂàõÂª∫.envÊñá‰ª∂
            cat > .env << EOF
            PORT=8080
            TABLESTORE_ENDPOINT=${{ secrets.TABLESTORE_ENDPOINT }}
            TABLESTORE_INSTANCE_NAME=${{ secrets.TABLESTORE_INSTANCE_NAME }}
            TABLESTORE_ACCESS_KEY_ID=${{ secrets.TABLESTORE_ACCESS_KEY_ID }}
            TABLESTORE_ACCESS_KEY_SECRET=${{ secrets.TABLESTORE_ACCESS_KEY_SECRET }}
            TUNNEL_GAME_SESSIONS_ID=${{ secrets.TUNNEL_GAME_SESSIONS_ID }}
            TUNNEL_GAME_EVENTS_ID=${{ secrets.TUNNEL_GAME_EVENTS_ID }}
            NODEJS_CALLBACK_URL=http://localhost:3001
            EOF
            
            # ÂÆâË£ÖJava 11ÔºàÂ¶ÇÊûúÊú™ÂÆâË£ÖÔºâ
            if ! command -v java &> /dev/null; then
              echo "üì¶ ÂÆâË£ÖJava 11..."
              sudo apt-get update -qq
              sudo apt-get install -y -qq openjdk-11-jre-headless
            fi
            
            # Ê£ÄÊü•JavaÁâàÊú¨
            java -version
            
            # Ê£ÄÊü•ÁéØÂ¢ÉÂèòÈáè
            echo "üîç Checking environment variables..."
            chmod +x check-env.sh
            ./check-env.sh || echo "‚ö†Ô∏è Some environment variables may be missing"
            
            # ÂÅúÊ≠¢ÊóßÊúçÂä°ÔºàÂ¶ÇÊûúËøêË°å‰∏≠Ôºâ
            if [ -f /var/run/tunnel-service.pid ]; then
              ./stop.sh || true
            fi
            
            # ÂêØÂä®Êñ∞ÊúçÂä°
            ./start.sh
            
            # Á≠âÂæÖÊúçÂä°ÂêØÂä®
            sleep 5
            
            # Ê£ÄÊü•ÊúçÂä°Áä∂ÊÄÅ
            if [ -f /var/run/tunnel-service.pid ]; then
              PID=$(cat /var/run/tunnel-service.pid)
              if ps -p $PID > /dev/null 2>&1; then
                echo "‚úÖ Java Tunnel Service is running (PID: $PID)"
                
                # ÊµãËØïÂÅ•Â∫∑Ê£ÄÊü•
                curl -f http://localhost:8080/api/health || echo "‚ö†Ô∏è Health check failed"
              else
                echo "‚ùå Service failed to start"
                cat logs/application.log
                exit 1
              fi
            else
              echo "‚ùå PID file not found"
              cat logs/application.log
              exit 1
            fi

