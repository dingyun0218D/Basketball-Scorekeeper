name: Deploy Backend to ECS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'server/package-lock.json'

      - name: 安装依赖
        working-directory: ./server
        run: npm ci

      - name: 构建服务器
        working-directory: ./server
        run: npm run build

      - name: 部署到 ECS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.ECS_HOST }}
          username: ${{ secrets.ECS_USERNAME }}
          key: ${{ secrets.ECS_SSH_KEY }}
          source: "server/dist,server/package.json,server/package-lock.json,server/ecosystem.config.js"
          target: "/opt/basketball-scorekeeper"
          strip_components: 1

      - name: 在 ECS 上安装依赖并重启服务
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ECS_HOST }}
          username: ${{ secrets.ECS_USERNAME }}
          key: ${{ secrets.ECS_SSH_KEY }}
          script: |
            # 检查并安装Node.js环境
            if ! command -v node &> /dev/null; then
              echo "📦 安装Node.js..."
              curl -fsSL https://rpm.nodesource.com/setup_18.x | bash -
              yum install -y nodejs
            else
              echo "✅ Node.js已安装: $(node -v)"
            fi
            
            # 检查并安装PM2
            if ! command -v pm2 &> /dev/null; then
              echo "📦 安装PM2..."
              npm install -g pm2
            else
              echo "✅ PM2已安装: $(pm2 -v)"
            fi
            
            cd /opt/basketball-scorekeeper
            
            # 创建.env文件
            cat > .env << EOF
            TABLESTORE_INSTANCE_NAME=${{ secrets.TABLESTORE_INSTANCE_NAME }}
            TABLESTORE_ENDPOINT=${{ secrets.TABLESTORE_ENDPOINT }}
            TABLESTORE_ACCESS_KEY_ID=${{ secrets.TABLESTORE_ACCESS_KEY_ID }}
            TABLESTORE_ACCESS_KEY_SECRET=${{ secrets.TABLESTORE_ACCESS_KEY_SECRET }}
            TABLESTORE_REGION=${{ secrets.TABLESTORE_REGION }}
            TUNNEL_GAME_SESSIONS_ID=${{ secrets.TUNNEL_GAME_SESSIONS_ID }}
            TUNNEL_GAME_EVENTS_ID=${{ secrets.TUNNEL_GAME_EVENTS_ID }}
            TABLE_GAME_SESSIONS=GameSessions
            TABLE_GAME_EVENTS=GameEvents
            PORT=3001
            NODE_ENV=production
            ALLOWED_ORIGINS=${{ secrets.ALLOWED_ORIGINS }}
            EOF
            
            # 安装生产依赖
            npm ci --production
            
            # 创建logs目录
            mkdir -p logs
            
            # 使用PM2重启服务
            pm2 restart ecosystem.config.js || pm2 start ecosystem.config.js
            pm2 save

      - name: 通知部署状态
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ 后端部署成功！"
          else
            echo "❌ 后端部署失败！"
          fi

